/*
  Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

  Example 1:
  Input: "Let's take LeetCode contest"
  Output: "s'teL ekat edoCteeL tsetnoc"
  Note: In the string, each word is separated by single space and there will not be any extra space in the string.
*/

/*
  For every single word, use two pointers starting at both sides, moving towards each other and exchange their values.
  
  Then split the whole big string with space, take care of each word and re-join them with space.
*/

public class Solution {
    public String reverseWords(String s) {
        String[] words = s.split("\\s+");
        
        for(int i=0;i<words.length;i++){
            words[i] = reverseSingleWord(words[i]);
        }
        
        return String.join(" ", words);
    }
    
    public String reverseSingleWord(String s){
        char[] c = s.toCharArray();
        int len = c.length;
        
        for(int i=0,j=len-1;i<j;i++,j--){
            char temp = c[i];
            c[i] = c[j];
            c[j] = temp;
        }
        
        return new String(c);
    }
}
