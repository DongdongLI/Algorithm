/*
  Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

  The input string does not contain leading or trailing spaces and the words are always separated by a single space.

  For example,
  Given s = "the sky is blue",
  return "blue is sky the".

  Could you do it in-place without allocating extra space?

*/
// The trick: reverse the whole array and then go after the words

class Solution {
    public void reverseWords(char[] str) {
        reverse(str, 0, str.length-1);
        
        int start = 0;
        for(int i=0;i<str.length-1;i++){
            if(str[i]==' '){
                reverse(str, start, i-1);
                start = i+1;
            }
        }
        //then the last word. since there's no space for j to identify
        reverse(str, start, str.length-1);
    }
    
    public void reverse(char[] str, int l, int r){
        for(int i=l,j=r;i<j;i++,j--){
            char c = str[i];
            str[i] = str[j];
            str[j] = c;
        }
    }
}
