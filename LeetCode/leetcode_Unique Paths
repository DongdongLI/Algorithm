/*A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?
*/

/*ideas:
The rule that the robot can only move to right or down make the problem a lot easier.
The formular is s[i][j]=s[i-1][j]+s[i][j-1]
*/
public class Solution {
    public int uniquePaths(int m, int n) {
        int[][] s=new int[m][n];
		for(int i=0;i<m;i++)
			s[i][0]=1;
		for(int j=0;j<n;j++)
			s[0][j]=1;
		
		for(int i=1;i<m;i++)
			for(int j=1;j<n;j++)
			{
				s[i][j]=s[i-1][j]+s[i][j-1];
			}
		
		return s[m-1][n-1];
    }
}
