/*
  Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

  For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

  Note:
  You must do this in-place without making a copy of the array.
  Minimize the total number of operations.
*/

class Solution {
    public void moveZeroes(int[] nums) {
        
        int end = 0;// right boundary of array without 0
        int i = 0;// cursor help to swap the non-zero number over
        while(end < nums.length && i<nums.length){
            while(end<nums.length && nums[end]!=0)
                end++;
            
            if(end == nums.length)
                return;
            
            i = end+1;
            while(i<nums.length && nums[i] == 0)
                i++;
            
            if(i==nums.length)
                return;
            
            int temp = nums[i];
            nums[i] = nums[end];
            nums[end] = temp;
        }
    }
}
