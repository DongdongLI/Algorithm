/*
  You need to find the largest value in each row of a binary tree.

  Example:
  Input: 

            1
           / \
          3   2
         / \   \  
        5   3   9 

  Output: [1, 3, 9]
*/

/*
  cur: current level
  nextRow: next level
  
  while going through cur, adding its children to the next level.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> largestValues(TreeNode root) {
        List<Integer> res = new ArrayList();
        
        if(root == null)
            return res;
        
        Queue<TreeNode> cur = new LinkedList();
        Queue<TreeNode> nextRow = new LinkedList();
                
        cur.offer(root);
        
        Integer max = Integer.MIN_VALUE;
        
        while(true){
            if(!cur.isEmpty()){
                TreeNode node = cur.poll();
                
                if(node.left!=null)nextRow.offer(node.left);
                if(node.right!=null)nextRow.offer(node.right);
                
                if(node.val > max)
                    max = node.val;
            }
            else{
                res.add(max);
                max = Integer.MIN_VALUE;
                
                if(nextRow.isEmpty())
                    break;
                
                cur = new LinkedList(nextRow);
                nextRow.clear();
            }
        }
        return res;
    }
}
