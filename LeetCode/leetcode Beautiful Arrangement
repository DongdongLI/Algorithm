/*
  Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 ? i ? N) in this array:

  The number at the ith position is divisible by i.
  i is divisible by the number at the ith position.
  Now given N, how many beautiful arrangements can you construct?

  Example 1:
  Input: 2
  Output: 2
  Explanation: 

  The first beautiful arrangement is [1, 2]:

  Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).

  Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).

  The second beautiful arrangement is [2, 1]:

  Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).

  Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.
  Note:
  N is a positive integer and will not exceed 15.
*/

/*
  Try every single possibilities.
  do it AGAIN!!!
*/

public class Solution {
    int count=0;
    public int countArrangement(int N) {
        boolean[] used = new boolean[N];
        
        if(N==0) return 0;
        
        help(N, used, 0);
            
        return count;
    }
    
    public void help(int N, boolean[] used, int start){
        if(start == N)
            count++;
        else
            for(int i=0;i<used.length;i++){
                if(used[i] == false && ((start+1)%(i+1)==0 || (i+1)%(start+1)==0) ){
                    used[i] = true;
                    help(N, used, start+1);
                    used[i] = false;
                }
        }
    }
    
}
