/*
 Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space. 
*/

/*
Basic idea:
Put each number to the index equals to the number.
Check if any index does not match
Take care of the first index carefully
*/

public class Solution {
    public int firstMissingPositive(int[] A) {
        if(A==null || A.length==0)return 1;
		
		int i=0;
		while(i<A.length)
		{
			if(A[i]>=0&&A[i]<A.length&&A[i]!=i && A[A[i]]!=A[i])
			{
				int temp=A[A[i]];
				A[A[i]]=A[i];
				A[i]=temp;
				//i++;
				//System.out.println("here1");
			}
			else
				i++;
		}
		for(int j=1;j<A.length;j++)
		{
			System.out.println("here2");
			if(A[j]!=j)
				return j;
		}
		if(A[0]==A.length)return A.length+1;
		else
			return A.length;
    }
}
