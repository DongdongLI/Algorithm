/*
  Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

  Examples:
  Input: S = "a1b2"
  Output: ["a1b2", "a1B2", "A1b2", "A1B2"]

  Input: S = "3z4"
  Output: ["3z4", "3Z4"]

  Input: S = "12345"
  Output: ["12345"]
  Note:

  S will be a string with length at most 12.
  S will consist only of letters or digits.
*/

class Solution {
    public List<String> letterCasePermutation(String S) {
        List<String> res = new ArrayList<>();
        if(S==null || S.length()==0){
            res.add("");
            return res;
        }
        
        helper(res, 0, S);
        return res;
    }
    
    public void helper(List<String> res, int i, String S){
        if(i==S.length())
            res.add(S);
        else{
            char c = S.charAt(i);
            if(!Character.isDigit(c)){
                if(Character.isLowerCase(c))
                    c=Character.toUpperCase(c);
                else
                    c=Character.toLowerCase(c);
                String newStr = S.substring(0,i)+c+S.substring(i+1, S.length());
                helper(res, i+1, S);
                helper(res, i+1, newStr);
            }
            else{
                helper(res, i+1, S);
            }
        }
    }
}
