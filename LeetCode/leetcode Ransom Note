/*
  Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

  Each letter in the magazine string can only be used once in your ransom note.

  Note:
  You may assume that both strings contain only lowercase letters.

  canConstruct("a", "b") -> false
  canConstruct("aa", "ab") -> false
  canConstruct("aa", "aab") -> true
*/

/*
  Trivial solution: go through magazine and figure out how many of each letters do we have.
  
            go throught ransom note, and see if we have enough supplies.
*/

public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character, Integer> mag = new HashMap<Character, Integer>();
        
        char[] magzineArr = magazine.toCharArray();
        
        char[] ransomNoteArr = ransomNote.toCharArray();
        
        for(char c: magzineArr) {
            if(mag.containsKey(c)){
                mag.put(c, mag.get(c)+1);
            }
            else {
                mag.put(c,1);
            }
        }
        
        for(char c: ransomNoteArr) {
            if(mag.containsKey(c) == false || mag.get(c)==0 )
                return false;
            mag.put(c, mag.get(c)-1);
        }
        return true;
    }
}
