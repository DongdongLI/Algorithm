/*
  Given a roman numeral, convert it to an integer.

  Input is guaranteed to be within the range from 1 to 3999.
*/

public class Solution {
    public int romanToInt(String s) {
		Map<String,Integer> map=new HashMap<String, Integer>();
		map.put("M", 1000);
		map.put("CM", 900);
		map.put("D", 500);
		map.put("CD", 400);
		map.put("C",100);
		map.put("XC", 90);
		map.put("L", 50);
		map.put("XL", 40);
		map.put("X", 10);
		map.put("IX", 9);
		map.put("V", 5);
		map.put("IV", 4);
		map.put("I", 1);
		
		int res=0;
		
		while(s.length()>0){// always take the first or first two characters and convert it to number. until the length becomes 0
			if(s.length()>=2){
				if(map.containsKey(s.substring(0, 2))){
					res+=map.get(s.substring(0, 2));
					s=s.substring(2);
				}else{
					res+=map.get(s.substring(0,1));
					s=s.substring(1);
				}
			}else{
				res+=map.get(s.substring(0,1));
				s=s.substring(1);
			}
		}
		return res;
    }
}

//2015/10/21: nail it.
