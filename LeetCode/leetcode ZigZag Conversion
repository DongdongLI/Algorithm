/*
  The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

  P   A   H   N
  A P L S I I G
  Y   I   R
  And then read line by line: "PAHNAPLSIIGYIR"
  Write the code that will take a string and make this conversion given a number of rows:
  
  string convert(string text, int nRows);
  convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".
*/

/*
    0     6       12
    1   5 7    11 13
    2  4  8  10   14
    3     9       15
    
    * 0~5 is one section, 6~11 is also one,etc
    * the step between sections is 2*n-2
    * the change of index in first row and the last row are constant: all equal to step=2*n-2; so "j+step"
    * in other rows: for example 4 and 5
        their index are calculated as: j+step-2*i
*/

public class Solution {
    public String convert(String s, int numRows) {
        if(s==null || s.length()<=1)
        	return s;
        if(numRows==1)return s;
        char[] temp=s.toCharArray();
        StringBuffer result=new StringBuffer();
        int step=2*numRows-2;
        
        for(int i=0;i<numRows;i++){
        	for(int j=i;j<s.length();j+=step){
        		result.append(temp[j]);
        		if(i!=0 && i!=numRows-1){
        			int t=j+(2*numRows-2)-2*i;
        			if(t<s.length())
        				result.append(temp[t]);
        		}
        	}
        }
        return result.toString();
    }
}
