/*
  Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.

  Example 1:
  Input: [1,12,-5,-6,50,3], k = 4
  Output: 12.75
  Explanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75
  Note:
  1 <= k <= n <= 30,000.
  Elements of the given array will be in the range [-10,000, 10,000].
*/

/*
  imagine a moving window sliding from left to the right. in every move, the left most element will be gone while a new element will be
  added from the right side
*/

public class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int left = 0;
        int right = k-1;
        
        double max = 0.0;
        double preSum = 0.0;
        
        int sum = 0;
        for(int i=left;i<=right;i++)
            sum += nums[i];
        
        preSum = sum;
        
        max = preSum/k;
        
        for(int i=left+1;i<nums.length - k + 1;i++){
            preSum = preSum-nums[i-1]+nums[i+k-1];
            
            double temp = preSum*1.0/k;
            
            if(temp>max)max = temp;
        }
        
        return max==0.0?preSum*1.0/k : max;
    }
}
