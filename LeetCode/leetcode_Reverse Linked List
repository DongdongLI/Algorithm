/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null || head.next==null)
        	return head;
        
    	ListNode prev=head;
    	ListNode cur=head.next;
    	while(cur!=null){
    		ListNode temp=cur.next;
    		cur.next=prev;
    		prev=cur;
    		cur=temp;
    	}
    	head.next=null;
    	return prev;
    }    
}

// 2015/12/4
/*
    Remember how it works. 
    Forgot to set "head.next=null;" (the reason to set head.next=null: assume the first node point to the second node as its next, and the 
    second one point to the first one as next, that would be an infinite loop)
*/
