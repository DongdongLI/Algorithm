/*
Given a binary array, find the maximum number of consecutive 1s in this array.

Example 1:
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.
Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000
*/

/*
  two pointers.
*/

public class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int max=0;
        int l=0;
        int r=0;
        
        int len;
        
        while(l<nums.length){
            if(nums[l]==0) // the left pointer will start at the first index that is 1, so keep moving until then
                l++;
            else{
                len=1;  // at this point, the length is at least 1, like [...0 1 0...]
                r=l+1;  // start checking consecutive 1s
                while(r<nums.length&&nums[r]==1){  // remember to check the border 
                    r++;
                    len++;
                }
                if(len>max)  // update the max length if necessary
                    max=len;
                l=r+1;  // jump to the new position to start a new rount (because we know index r is 0)
            }
        }
        return max;
    }
}
