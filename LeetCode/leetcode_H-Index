/*  Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.
  
  According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."
  
  For example, given citations = [3, 0, 6, 1, 5], which means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, his h-index is 3.
  
  Note: If there are several possible values for h, the maximum one is taken as the h-index.
  
  Hint:
  
  An easy approach is to sort the array first.
  What are the possible values of h-index?
  A faster approach is to use extra space.
*/

/*
    We can translate the problem to the following task, find an Integer x such in the given array, there are x elements no bigger
    than x and len-x elements no smaller than x.
    
    
*/
/*
  eg. [7,6,5,3,1,0]
  
  i=1, there are 5 elements smaller or equal than 6
  i=2, there are 4 elements smaller or equal than 5
  i=3, there are 3 elements smaller or equal than 3
*/
public class Solution{
	public int hIndex(int[] citations) {
		Arrays.sort(citations); // the bigger element are in the front
		int len=citations.length;
		for(int i=0;i<citations.length;i++){
			if(citations[i]>=len-i) 
				return len-i;
		}
		return 0;
    }
}
