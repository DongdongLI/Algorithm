/*
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 
*/
/*ideas
11000
11100
12100
12110
12310
13310

13610
14610
*/

public class Solution {
    public ArrayList<Integer> getRow(int rowIndex) {
        ArrayList<Integer> result=new ArrayList<Integer>(rowIndex+1);
		for(int i=0;i<=rowIndex;i++)
			result.add(0);
		result.set(0, 1);
		
		for(int j=1;j<=rowIndex;j++)
		{	
			result.set(j, 1);
			for(int i=j-1;i>0;i--)
			{
				result.set(i, result.get(i)+result.get(i-1));
			}
			
		}
		return result;
    }
}
 
