/*
    Given an integer n, return the number of trailing zeroes in n!.
    Note: Your solution should be in logarithmic time complexity.
*/

//the key point is to count the number of 5s
//it is aparent that every appearance of 5 will lead to a 0.
//10=5*2,25=5*5...
//we need to know how many 5s,how many 25s...

//for example, if n=125 and we need to count the five in 1,2,3,...,125
//125/5 is used to count the number of figures which have at least one 5
//125/5/5 is used to count the number of figures which have at least two 5s
//125/5/5/5 is used to count the number of figures which have at least three 5s

//Therefore, figure like 125 will be counted for three times since it has three 5s

public class Solution {
    public int trailingZeroes(int n) {
       int count = 0;
        while (n > 0) {
            n /= 5;
            count += n;
        }
        return count;
    }
}
