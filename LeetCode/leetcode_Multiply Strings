

/*
Given two numbers represented as strings, return multiplication of the numbers as a string.

Note: The numbers can be arbitrarily large and are non-negative.
*/


/*
1. Reverse the two strings, since it would be easier to calculate each element.
2.  For each index, the digit(remain) will be add to the result while carry will be added to the next index

A good hint:
            123
          * 456
          ------
            738
           615
          482
          -------

*/

public class Solution {
    public String multiply(String num1, String num2) {
       num1=new StringBuilder(num1).reverse().toString();
        num2=new StringBuilder(num2).reverse().toString();
		
        int[] d=new int[num1.length()+num2.length()];
        for(int i=0;i<num1.length();i++)
        {
        	for(int j=0;j<num2.length();j++)
        	{
        		d[i+j]+=(num1.charAt(i)-'0')*(num2.charAt(j)-'0');
        	}
        }
        
        StringBuilder result=new StringBuilder();
        
        for(int i=0;i<d.length;i++)
        {
        	int temp=d[i];
        	int remain=temp%10;
        	result.insert(0, remain);
        	d[i]=remain;
        	if(i<d.length-1)
        		d[i+1]=d[i+1]+temp/10;
        }
        while (result.length() > 0 && result.charAt(0) == '0') {
            result.deleteCharAt(0);
        }
        return result.length() == 0 ? "0" : result.toString();  
    }
}
