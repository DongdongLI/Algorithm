/*
The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

00 - 0
01 - 1
11 - 3
10 - 2
*/

//solution 1
public class Solution {//very tricky but clever
    public List<Integer> grayCode(int n) {
        
        ArrayList<Integer> result=new ArrayList<Integer>();
        result.add(0);
        for(int i=0;i<n;i++)
        {
        	int len=result.size();
        	for(int j=len-1;j>=0;j--)
        	{
        		result.add(result.get(j)+len);
        	}
        }
        return result;
    
    }
}


/*
0 0 0
0 0 1
0 1 1
0 1 0
1 1 0
1 1 1
1 0 1
1 0 0
可以看到第n位的格雷码由两部分构成，一部分是n-1位格雷码，再加上 1<<(n-1)和n-1位格雷码的逆序的和
*/
//solution 2
public class Solution {
    public ArrayList<Integer> grayCode(int n) {
		if(n==0)
			{
				ArrayList<Integer> res=new ArrayList<Integer>();
				res.add(0);
				return res;
			}
			ArrayList<Integer> temp=grayCode(n-1);
			int toAdd=1<<(n-1);
			ArrayList<Integer> result=new ArrayList<Integer>(temp);
			for(int i=temp.size()-1;i>=0;i--)
			{
				result.add(temp.get(i)+toAdd);
			}
			return result;
		}
	}
