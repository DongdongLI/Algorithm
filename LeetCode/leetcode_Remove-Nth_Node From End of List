/*
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.

Note:
Given n will always be valid.
Try to do this in one pass. 
*/

/*
Fast and slow pointers.
Pay attentation to the list whose length is 1 or the situation when n==len
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
		if(head==null)return head;
		
		ListNode p=head,q=head;
		int i=0;
		for(i=0;i<n;i++)
		{
			q=q.next;
		}
		if(i==n&&q==null)
		{
		    head=head.next;
		    return head;
		}
		while(q.next!=null)
		{
			p=p.next;
			q=q.next;
		}
		p.next=p.next.next;
		
		return head;
    }
}
