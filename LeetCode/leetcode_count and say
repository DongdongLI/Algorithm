/*
  The count-and-say sequence is the sequence of integers beginning as follows:
  1, 11, 21, 1211, 111221, ...
  
  1 is read off as "one 1" or 11.
  11 is read off as "two 1s" or 21.
  21 is read off as "one 2, then one 1" or 1211.
  Given an integer n, generate the nth sequence.
  
  Note: The sequence of integers will be represented as a string.
*/

//trivial way 
/*
    Based on the previous string to generate the next one:
      count how many same digits appear one by one
*/
public class Solution {
    public String countAndSay(int n) {
    	if(n==1)return "1";
    	String s="1";
    	StringBuilder result;
    	int num=1;
    	while(num<n){
	    	char[] a=s.toCharArray(); // s is the string generate in the last iteration
	    	result=new StringBuilder(); // built from scrach
	    	
	    	char digit=a[0];
	    	int count=1;
	    	for(int i=0;i<a.length-1;i++){
	    		if(a[i+1]==a[i]){
	    			count++;
	    		}else{
	    			result.append(count); // there are count 
	    			result.append(digit); // of digit in this section
	    			count=1;
	    			digit=a[i+1];
	    		}
	    	}
	    		result.append(count);
			result.append(digit); 
			s=result.toString();
			num++; // the next one
    	}
		return s;
    }
}
