/*
  Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.

  For example:
  Given n = 13,
  Return 6, because digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.
*/

/*
  for every 1000 numbers, there are 100 x1xx, for every 100 numbers, there are10 x1x 
  
  idea:
      the number of 1s in the third from the right
      
    3141 0 92:  3141* (1000/10)
    3141 1 92:  3141* (1000/10)+(92+1) // from 100 to 192
    3141 5 92:  3141* (1000/10)+(100) // from 100 to 199
*/

public class Solution {
	public int countDigitOne(int n){
	  // total number of 1s
		int result=0;
		for(long m=1;m<=n;m*=10){
		// left part
			long a=n/m;
		// right part
			long b=n%m;
		// total in this digit
			long curr=0;
			// to prevent the situation that a ends at two
			curr+=(a+8)/10*m;
			if(a%10==1)
				curr+=(1+b);
			result+=curr;
		}
		return result;
	}
}

