/*
  Given an array of strings, group anagrams together.

  For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
  Return:
  
  [
    ["ate", "eat","tea"],
    ["nat","tan"],
    ["bat"]
  ]
  Note:
  For the return value, each inner list's elements must follow the lexicographic order.
  All inputs will be in lower-case.
*/

public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        Map<String,List<String>> map=new HashMap<String, List<String>>();
		Arrays.sort(strs);// to make sure the order of the output is correct
		for(String str:strs){
			char[] chars=str.toCharArray();
			Arrays.sort(chars);
			String temp=String.valueOf(chars); // instead of saving a map like "a->2,b->4..." as a key, we can use the sorted "str" as a string: 
			// a lot faster
			if(map.containsKey(temp)){
				map.get(temp).add(str);
			}else{
				List<String> list=new LinkedList<>();
				list.add(str);
				map.put(temp, list);
			}
		}
		return new LinkedList<>(map.values());
    }
}

//2015/12/26: nail it. long gone.
