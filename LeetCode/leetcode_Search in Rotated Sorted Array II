/*
Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.
*/
public class Solution {
   
    public boolean search(int[] A, int target) {
        if(A==null || A.length==0)  
	        return false;
		int p=0;
		int q=A.length-1;
		
		
		
		while(p<=q)
		{
			int r=(p+q)/2;
			if(A[r]==target)
				return true;
			if(A[p]<A[r])
			{
				if(target<A[r] && A[p]<=target)
				{
					q=r-1;
				}
				else
				{
					p=r+1;
				}
			}
			else if(A[p]>A[r])
			{
				if(target<=A[q]&&target>A[r])
				{
					p=r+1;
				}
				else
					q=r-1;
			}
			else
				p++;
		}
		return false;
	}
}
