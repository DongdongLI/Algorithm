/*
  An array is monotonic if it is either monotone increasing or monotone decreasing.

  An array A is monotone increasing if for all i <= j, A[i] <= A[j].  An array A is monotone decreasing if for all i <= j, A[i] >= A[j].

  Return true if and only if the given array A is monotonic.



  Example 1:

  Input: [1,2,2,3]
  Output: true
  Example 2:

  Input: [6,5,4,4]
  Output: true
  Example 3:

  Input: [1,3,2]
  Output: false
  Example 4:

  Input: [1,2,4,5]
  Output: true
  Example 5:

  Input: [1,1,1]
  Output: true


  Note:

  1 <= A.length <= 50000
  -100000 <= A[i] <= 100000
*/

// Slowass solution: Basically checking if the array is sorted.
class Solution {
    public boolean isMonotonic(int[] A) {
        if(A.length==1)return true;
        
        int i=0;
        int j=1;
        
        boolean increasingSorted = true;
        boolean decreasingSorted = true;
        
        while(j<A.length) {
            if(A[i]>A[j]){
                increasingSorted = false;
                break;
            }
            j++;
            i++;
        }
        
        i=0;j=1;
        while(j<A.length) {
            if(A[i]<A[j]){
                decreasingSorted = false;
                break;
            }
            j++;
            i++;
        }
        
        return (increasingSorted || decreasingSorted);
    }
}

// slightly smarter idea
class Solution {
    public boolean isMonotonic(int[] A) {
        if(A.length==1)return true;
        
        int i=0;
        int j=1;
        
        // see if the array is increasing or decreasing. More importantly, check if this character has changed along the way
        Boolean isIncreasing = null;
        
        while(j<A.length) {
            if(A[i]>A[j]){
                if(isIncreasing == null)
                    isIncreasing = false;
                else if(isIncreasing == true)
                    return false;
            }
            else if(A[i]<A[j]){
                if(isIncreasing == null)
                    isIncreasing = true;
                else if(isIncreasing == false)
                    return false;
            }
            j++;
            i++;
        }
                
        return true;
    }
}

// best solution (fastest)
class Solution {
    public boolean isMonotonic(int[] A) {
        // use these two as markers to show the trend
        Boolean increasing = null;
        Boolean decreasing = null;
        
        if(A == null || A.length==0 || A.length==1)
            return true;
        
        for(int i=0;i<A.length-1;i++) {
            if(A[i] == A[i+1])
                continue;
            else {
                if(A[i+1]<A[i]) {
                    if(increasing!=null && increasing == true || decreasing != null &&decreasing == false)
                        return false;
                    decreasing = true;
                }
                else{
                    if(increasing!=null &&increasing == false || decreasing != null &&decreasing == true)
                        return false;
                    increasing = true;
                }
            }
        }
        
        return true;
    }
}
