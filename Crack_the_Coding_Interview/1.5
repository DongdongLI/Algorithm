/*Implement a method to perform basic string compression using the counts of repeated characters.

aabcccccaaa becomes a2b1c5a3

if the compressed string is not shorter than the original sting, then return the original one.
*/

/*Solution:
use 2 pointer and a Integer count.
*/

String compressString(String s)
	{
		if(s.length()<=2)
			return s;
		int prev=0;
		int cur=1;
		int count=1;
		StringBuilder sb=new StringBuilder();
		while(cur<s.length())
		{
			if(s.charAt(prev)==s.charAt(cur))
			{
				count++;
				cur++;
			}
			else
			{
				sb.append(s.charAt(prev));
				sb.append(count);
				count=1;
				prev=cur-1;
				cur++;
				prev++;
			}
		}
		sb.append(s.charAt(prev));
		sb.append(count);
		if(sb.length()<=s.length())
			return sb.toString();
		else
			return s;
	}
