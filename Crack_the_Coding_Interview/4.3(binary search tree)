/*
    Given a sorted(increasing order) array with unique integer elements, write an algorithm to create a binary search 
    with minimal height
*/

/*
    hint: just keep choosing the middle one of the array or subarray as the node
*/

static TreeNode buildBST(int[] a,int start,int end)
	{
		if(start>end)
			return null;
		int mid=(start+end)/2;
		TreeNode root=new TreeNode(a[mid]);
		root.left=buildBST(a, start, mid-1);
		root.right=buildBST(a, mid+1, end);
		return root;
	}
	static TreeNode build(int[] a)
	{
		return buildBST(a, 0, a.length-1);
	}

class TreeNode
{
	int val;
	TreeNode left;
	TreeNode right;
	public TreeNode(int v) {
		this.val=v;
		left=null;
		right=null;
	}
}
