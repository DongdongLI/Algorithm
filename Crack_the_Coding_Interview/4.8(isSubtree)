/*
    You have two very large binary trees: T1, with millions of nodes, and T2, with hundreds of nodes. Create an 
    algorithm to decide if T2 is subtree of T1.
*/

/*Solution 1*/
/*
    Traverse both trees and use string to store the traverse result. Compare if one is the other's substring
*/
public boolean isSubtree(TreeNode tree1,TreeNode tree2)
	{
		StringBuilder sb1=new StringBuilder();
		StringBuilder sb2=new StringBuilder();
		
		traverse(tree1, sb1);
		traverse(tree2,sb2);
		if(sb1.toString().contains(sb2.toString()))
			return true;
		else
			return false;
	}
	public void traverse(TreeNode node,StringBuilder sb)
	{
		if(node.left!=null)
			traverse(node.left,sb);
		else
			sb.append(" "+"-999");
		
		sb.append(" "+node.val);
		
		if(node.right!=null)
			traverse(node.right,sb);
		else
			sb.append(" "+"-999");
	}
	
	
