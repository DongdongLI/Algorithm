//DFS

public void help(int[] a,ArrayList<ArrayList<Integer>> result,ArrayList<Integer> part,int len,int start)
	{
		if(part.size()==len)
		{
			ArrayList<Integer> temp=new ArrayList<Integer>(part);
			result.add(temp);
			return;
		}
		else
		{
			for(int i=start;i<a.length;i++)
			{
				part.add(a[i]);
				help(a, result, part, len, i+1);
				part.remove(part.size()-1);
			}
		}
	}
	
	public int move(int x,int y)
	{
		int[][] paths=new int[x+1][y+1];
		for(int i=0;i<paths.length;i++)
			paths[i][0]=1;
		for(int j=0;j<paths[0].length;j++)
			paths[0][j]=1;
		
		for(int i=1;i<x+1;i++)
		{
			for(int j=1;j<y+1;j++)
			{
				paths[i][j]=paths[i-1][j]+paths[i][j-1];
			}
		}
		return paths[x][y];
	}
