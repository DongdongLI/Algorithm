/*
    Imagine a robot sitting on the upper left corner of an X by Y grid. Thr robot can only move to right or down. How many
    paths are there for the robot to go from (0,0) to (X,Y)?
*/

/*
    Path(i,j)=Path(i-1,j)+Path(i,j-1);
*/
public int move(int x,int y)
	{
		int[][] paths=new int[x+1][y+1];
		for(int i=0;i<paths.length;i++)
			paths[i][0]=1;
		for(int j=0;j<paths[0].length;j++)
			paths[0][j]=1;
		
		for(int i=1;i<x+1;i++)
		{
			for(int j=1;j<y+1;j++)
			{
				paths[i][j]=paths[i-1][j]+paths[i][j-1];
			}
		}
		return paths[x][y];
	}
	
	/*
	    Follow up: some certain spots are "off limits", robot cannot step on them. Design an algorithm to find a path 
	    for the robot.
	*/
	
	
