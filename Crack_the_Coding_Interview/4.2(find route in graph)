/*
    Given a directed graph, design an algorithm to find out whether there is a rout between two nodes.
*/

/*can be solved with DFS or BFS*/
public enum State
{
  Unvisited, Visited, Visiting;
}


public static boolean search(Graph g,Node start, Node end)
{
  LinkedList<Node> q=new LinkedList<Node>();
  for(Node u:g.getNodes())
  {
    u.state=State.Unvisited;
  }
  q.add(start);
  Node u;
  while(!q.isEmpty())
  {
    u=q.removeFirst();
    if(u!=null)
    {
      for(Node v:u.getAdjacent())
      {
        if(v==end)
          return true;
        else
        {
          q.add(v);
          v.state=Visiting;
        }
      }
    }
    u.state=Visited;
  }
  return false;
}
